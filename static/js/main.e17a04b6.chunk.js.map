{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","sortAlphabet","setState","sortLength","sortReverse","prevState","sortReset","this","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,MAC7C,MACF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEI,OAASH,EAAEG,UAc9C,OARIR,GACFC,EAAaQ,UAKfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAtCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+CE,IAAMiB,EAAb,4MACEC,MAAe,CACbb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEC,aAAe,WACb,EAAKC,SAAS,CACZjB,SAAUJ,EAASO,YARzB,EAYEe,WAAa,WACX,EAAKD,SAAS,CACZjB,SAAUJ,EAASY,UAdzB,EAkBEW,YAAc,WACZ,EAAKF,UACH,SAACG,GAAD,MAAgB,CACdnB,YAAamB,EAAUnB,gBArB/B,EA0BEoB,UAAY,WACV,EAAKJ,SAAS,CACZjB,SAAUJ,EAASmB,KACnBd,YAAY,KA7BlB,4CAiCE,WACE,MAAiCqB,KAAKR,MAA9Bd,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,mCACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYzB,IAAaJ,EAASO,WACtCuB,QAASJ,KAAKN,aAJhB,iCASA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYzB,IAAaJ,EAASY,SACtCkB,QAASJ,KAAKJ,WAJhB,4BASA,wBACEM,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAaxB,IACjByB,QAASJ,KAAKH,YAJhB,sBASEnB,IAAaJ,EAASmB,MAAQd,IAE7B,wBACEuB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKD,UAHhB,sBAUL,6BACE,6BACGvB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7C0B,KAAI,SAAAC,GACH,OACE,oBAAoB,UAAQ,OAA5B,SAAoCA,GAApC,UAAYA,oBApFhC,GAAyBC,IAAMC,WC9D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e17a04b6.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => (a.localeCompare(b)));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => (a.length - b.length));\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  sortReverse = () => {\n    this.setState(\n      (prevState) => ({\n        isReversed: !prevState.isReversed,\n      }),\n    );\n  };\n\n  sortReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <>\n        <div className=\"section content\">\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className={cn('button', 'is-info',\n                { 'is-light': sortType !== SortType.ALPHABET })}\n              onClick={this.sortAlphabet}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className={cn('button', 'is-success',\n                { 'is-light': sortType !== SortType.LENGTH })}\n              onClick={this.sortLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className={cn('button', 'is-warning',\n                { 'is-light': !isReversed })}\n              onClick={this.sortReverse}\n            >\n              Reverse\n            </button>\n\n            {(sortType !== SortType.NONE || isReversed)\n             && (\n               <button\n                 type=\"button\"\n                 className=\"button is-danger is-light\"\n                 onClick={this.sortReset}\n               >\n                 Reset\n               </button>\n             )}\n          </div>\n\n          <ul>\n            <ul>\n              {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n                .map(good => {\n                  return (\n                    <li key={`${good}`} data-cy=\"Good\">{good}</li>\n                  );\n                })}\n            </ul>\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}